% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fastPCA}
\alias{fastPCA}
\title{Perform fast SVD for a matrix in the memory}
\usage{
fastPCA(inputMatrix, k = 5, l, its = 2, diffsnorm = FALSE,
  centeringRow = FALSE, centeringColumn = FALSE)
}
\arguments{
\item{inputMatrix}{Matrix to decompose.}

\item{k}{Rank of decomposition. Default: 5}

\item{l}{Block size. Default k+2}

\item{its}{Number of normalized power iterations. Default: 2}

\item{diffsnorm}{Calculate 2-norm accuracy, i.e. ||A-USV||_2.}

\item{centeringRow}{Center the rows prior to decomposition.}

\item{centeringColumn}{Center the columns prior to decomposition.}
}
\value{
A FastPCA object, containing the decomposition.
}
\description{
This function performs a nearly optimal rank-k approximation to the singular value decomposition inputMatrix = USV' on a matrix that is passed via the memory.  Please see references for explanation of 'nearly optimal.'
}
\examples{

k_ <- 20;
m = 9E2;
n = 10E3;
B <- matrix(rexp(m*k_), m)
C <- matrix(rexp(k_*n), k_)
D <- B \%*\% C;
dim(D)
fastDecomp <- fastPCA(D, k=k_, diffsnorm=TRUE)
str(fastDecomp)
norm(D - fastDecomp$U \%*\% fastDecomp$S \%*\%t(fastDecomp$V), type='2')
}

