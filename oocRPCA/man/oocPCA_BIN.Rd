% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oocRPCAWrappers.R
\name{oocPCA_BIN}
\alias{oocPCA_BIN}
\title{Perform out-of-core SVD for a matrix in binary format}
\usage{
oocPCA_BIN(inputFile, m, n, k = 5, l, mem = 2e+09, its = 2,
  diffsnorm = FALSE, centeringRow = FALSE, centeringColumn = FALSE)
}
\arguments{
\item{inputFile}{file containing matrix to decompose}

\item{m}{Number of rows in matrix}

\item{n}{Number of columns in matrix}

\item{k}{Rank of decomposition. Default: 5}

\item{l}{Block size. Default k+2}

\item{mem}{Amount of memory the algorithm is allowed to use in bytes.  Must be greater than the number of columns * 8 (i.e. the memory to store one row).}

\item{its}{Number of normalized power iterations. Default: 2}

\item{diffsnorm}{Calculate 2-norm accuracy, i.e. ||A-USV||_2.}

\item{centeringRow}{Center the rows prior to decomposition.}

\item{centeringColumn}{Center the columns prior to decomposition.}
}
\value{
A list containing the decomposition.
}
\description{
This function performs a nearly optimal rank-k approximation to the singular value decomposition inputMatrix = USV' on a matrix that is passed via binary format.  Please see references for explanation of 'nearly optimal.'
}
\examples{

k_ <- 10;
m = 1e3;
n = 1e2;
B <- matrix(rexp(m*k_), m)
C <- matrix(rexp(k_*n), k_)
D <- B \%*\%C;
dim(D)
fn = "test_csv.csv"
fnb = "test_csv.bin"
write.table(D,file=fn,sep=',',col.names=FALSE, row.names=FALSE)
oocPCA_csv2binary(fn, fnb)
library(oocRPCA);
fastDecomp <- oocPCA_BIN(fnb, m,n, k=k_, mem=floor(n*8*m/3), diffsnorm=TRUE)
norm( D - fastDecomp$U \%*\% fastDecomp$S \%*\% t(fastDecomp$V))
unlink(fn)
unlink(fnb)
}
